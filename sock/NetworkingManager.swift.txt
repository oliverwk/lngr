//
//  NetworkingManager.swift
//  sock
//
//  Created by Maarten Wittop Koning on 01/07/2020.
//  Copyright Â© 2020 Olivier Wittop Koning. All rights reserved.
//

import Foundation
import SwiftUI
import Combine

class NetworkingManager: ObservableObject {
    var didChange = PassthroughSubject<NetworkingManager, Never>()
    
    var NAList = NAKDAPIList(results: []) {
        didSet {
            didChange.send(self)
        }
    }
    
    
    
    init() {
        guard let url = URL(string: "http://192.168.2.95/dk.json") else { return }
        
        URLSession.shared.dataTask(with: url) { (data, _, _) in
            guard let data = data else { return }
            
            let NAList = try! JSONDecoder().decode(NAKDAPIList.self, from: data)
            
            DispatchQueue.main.async {
                self.NAList = NAList
            }
            
        }.resume()
    }
}
